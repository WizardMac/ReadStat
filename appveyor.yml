version: 0.1.{build}

os: Windows Server 2012 R2

platform: x64

environment:
  matrix:
#  - TOOLCHAIN: "msys2"
#  - TOOLCHAIN: "cygwin"
  - TOOLCHAIN: "msvc"

branches:
  only:
    - master
    - dev

skip_tags: true

install:
  - git clone https://github.com/pffang/libiconv-for-Windows.git C:\projects\iconv
  - cd C:\projects\iconv
  - git checkout 0e36d95873

for:
-
  matrix:
    only:
      - TOOLCHAIN: "msvc"

  build:
    parallel: true
    project: VS17/ReadStat.sln
    verbosity: minimal

-
  matrix:
    except:
      - TOOLCHAIN: "msvc"

  build_script:
  - ps: |
      if ($env:TOOLCHAIN -eq "msys2")
      {
        $env:MSYSTEM="MINGW64"
        C:\msys64\usr\bin\bash -l -c "pacman -S --noconfirm mingw-w64-x86_64-ragel"
        C:\msys64\usr\bin\bash -l -c "cd /c/projects/readstat && ./autogen.sh"
        C:\msys64\usr\bin\bash -l -c "cd /c/projects/readstat && ./configure"
        C:\msys64\usr\bin\bash -l -c "cd /c/projects/readstat && make"
      }
      elseif ($env:TOOLCHAIN -eq "cygwin")
      {
        C:\cygwin64\setup-x86_64.exe -qnNdO -s http://cygwin.mirror.constant.com -l C:/cygwin64/var/cache/setup -P libiconv-devel -P ragel -P zlib-devel
        C:\cygwin64\bin\sh -lc "cd /cygdrive/c/projects/readstat && ./autogen.sh"
        C:\cygwin64\bin\sh -lc "cd /cygdrive/c/projects/readstat && ./configure"
        C:\cygwin64\bin\sh -lc "cd /cygdrive/c/projects/readstat && make"
      }

test_script:
  - ps: |
      if ($env:TOOLCHAIN -eq "msys2")
      {
        $env:MSYSTEM="MINGW64"
        C:\msys64\usr\bin\bash -l -c "cd /c/projects/readstat && make check"
      }
      elseif ($env:TOOLCHAIN -eq "cygwin")
      {
        C:\cygwin64\bin\sh -lc "cd /cygdrive/c/projects/readstat && make check"
      }
      else
      {
        $state = "PASS"
        $tests = @("readstat","double_decimals","sav_date","dta_days")

        Copy-Item "C:\projects\iconv\lib64\libiconvD.dll" -Destination "C:\projects\readstat\VS17\x64\Debug\"

        for($i=0 ; $i -lt $tests.Length ; $i++)
        {
          $currTest = $tests[$i]
          $currExec = 'C:\projects\readstat\VS17\x64\Debug\ReadStat_Test_' + $currTest + '.exe;$?'

          echo "Running test $currTest..."
          $success = Invoke-Expression $currExec

          if(-not $success){
            $state = "FAIL"
            echo "Test result: FAIL"
          }
          else{
            echo "Test result: PASS"
          }
        }

        if($state -eq "FAIL")
        {
          exit 1
        }
      }

on_success:
  - ps: |
      if ($env:TOOLCHAIN -eq "msys2")
      {
        C:\msys64\usr\bin\bash -l -c "cd /c/projects/readstat && cat ./test-suite.log"
      }
      elseif ($env:TOOLCHAIN -eq "cygwin")
      {
        C:\cygwin64\bin\sh -lc "cd /cygdrive/c/projects/readstat && cat ./test-suite.log"
      }
